name: Sync with Upstream

on:
  schedule:
    - cron: "0 0 1 * *" # Runs at 00:00 on the first day of every month
  workflow_dispatch:
  # TODO: Remove this trigger once the workflow is ready
  pull_request:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_KEY }}

      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}

      - name: Configure Git
        run: |
          git config user.name 'gha-runner-images-updater-test[bot]'
          git config user.email '172421971+gha-runner-images-updater-test[bot]@users.noreply.github.com@github.com'

      - name: Pull changes from upstream and rebase
        id: rebase
        run: |
          git remote add upstream https://github.com/actions/runner-images.git
          git fetch upstream
          git rebase upstream/main || echo "conflict=true" >> $GITHUB_OUTPUT

      - name: Create issue for conflict resolution
        if: ${{ steps.rebase.outputs.conflict == 'true' }}
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          echo "Rebase conflict detected. Creating an issue for manual resolution."
          gh issue create --title "Manual intervention required for upstream rebase" \
          --body 'Rebase conflicts detected. Here are the steps to manually resolve the conflicts:
          ```
          # Check out your main branch
          git checkout main
          # Fetch the latest changes from main
          git fetch origin main
          # Add the upstream as a remote
          git remote add upstream https://github.com/actions/runner-images.git
          # Fetch the latest changes from the upstream
          git fetch upstream
          # Start the rebase
          git rebase upstream/main
          # If conflicts, resolve them, and then run:
          git rebase --continue
          # Once all conflicts are resolved and the rebase is complete:
          git push origin main --force
          ```
          Please follow these steps to update your fork.
          Close this issue once the update is complete.' \
          --repo ${{ github.repository }}
          git rebase --abort

      - name: Force push changes to main
        if: ${{ steps.rebase.outputs.conflict != 'true' }}
        run: |
          git push origin main --force
