name: Sync with Upstream

permissions:
  contents: write
  actions: write
  pull-requests: write

on:
  schedule:
    - cron: "0 0 1 * *" # Runs at 00:00 on the first day of every month
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create new branch from main
        run: |
          git checkout -b update-from-upstream-${{ github.run_number }}

      - name: Configure Git
        run: |
          git config user.name 'github-actions'
          git config user.email 'github-actions@github.com'

      - name: Pull changes from upstream
        run: |
          git remote add upstream https://github.com/actions/runner-images.git
          git fetch upstream
          git merge upstream/main || true  # Continue on merge conflict

      - name: Check for merge conflicts
        id: check_conflicts
        run: |
          if git ls-files -u | grep -q '.'; then
            echo "Merge conflicts detected."
            git status
            echo "::set-output name=conflicts::true"
          else
            echo "No merge conflicts detected."
            echo "::set-output name=conflicts::false"
          fi

      - name: Commit merge conflicts
        if: steps.check_conflicts.outputs.conflicts == 'true'
        run: |
          git commit -am "Merge conflicts need resolution"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: update-from-upstream-${{ github.run_number }}

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "update-from-upstream-${{ github.run_number }}"
          destination_branch: "main"
          pr_title: "Sync with upstream"
          pr_body: "Update the repository with the latest changes from upstream. Merge conflicts may need manual resolution."
          github_token: ${{ secrets.GITHUB_TOKEN }}
