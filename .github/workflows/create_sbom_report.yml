name: Create SBOM for the release
# Inherited variables:
# github.event.client_payload.agentSpec - Current YAML Label
# github.event.client_payload.ReleaseID - Current release ID
# github.event.client_payload.imageVersion - AzDO image version "major.minor"
# github.event.client_payload.ReleaseBranchName - Necessary to identify workflow run
#
# Current SYFT tool issues:
# macOS (major): prompt privilegies that blocking process indefinetely (https://github.com/anchore/syft/issues/1367)
run-name: Collecting SBOM for ${{ github.event.client_payload.ReleaseBranchName || 'unknown release' }}
on:
  repository_dispatch:
    types: [generate-sbom]

permissions:
  contents: write

defaults:
  run:
    shell: pwsh
jobs:
  #Checking current release for SBOM
  sbom-check:
    permissions:
      contents: read
    outputs:
      check_status: ${{ steps.check.outputs.status }}
    runs-on: ubuntu-latest
    steps:
    - name: Check release
      id: check
      shell: pwsh
      env:
        RELEASE_ID: ${{ github.event.client_payload.ReleaseID }}
        RELEASE_BRANCH_NAME: ${{ github.event.client_payload.ReleaseBranchName }}
      run: |
        $apiUrl = "https://api.github.com/repos/actions/runner-images/releases/$env:RELEASE_ID"
        $response = Invoke-RestMethod -Uri $apiUrl -Method Get -SkipHttpErrorCheck
        if ($response.message -ilike "Not Found") {
          echo "status=release_not_found" >> $env:GITHUB_OUTPUT
          Write-Error "Release $env:RELEASE_ID wasn't found"
          exit 1
        }
        foreach ($asset in $response.assets) {
          if ($asset.name -like '*sbom*') {
            echo "status=sbom_exists" >> $env:GITHUB_OUTPUT
            return "Release $env:RELEASE_ID already contains a SBOM"
          }
        }
        Write-Host "Release has been found, SBOM is not attached, starting generation."
        echo "status=okay" >> $env:GITHUB_OUTPUT
  #Generating SBOM
  building-sbom:
    permissions:
      contents: write
    needs: sbom-check
    if: ${{ needs.sbom-check.outputs.check_status == 'okay' }}
    runs-on: ${{ github.event.client_payload.agentSpec }}
    steps:
      - name: Available image version check
        env:
          RELEASE_BRANCH_NAME: ${{ github.event.client_payload.ReleaseBranchName }}
          IMAGE_VERSION: ${{ github.event.client_payload.imageVersion }}
        run: |
          $imageVersionComponents = $env:ImageVersion.Split('.')
          $imageMajorVersion = $imageVersionComponents[0]
          $imageMinorVersion = $imageVersionComponents[1]
          if ("$imageMajorVersion.$imageMinorVersion" -ne "$env:IMAGE_VERSION") {
            throw "Current runner $imageMajorVersion.$imageMinorVersion image version doesn't match $env:IMAGE_VERSION."
          }
      - name: Install SYFT tool on Windows
        if: ${{ runner.os == 'Windows' }}
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b D:/syft
      - name: Install SYFT tool on Ubuntu 
        if: ${{ runner.os == 'Linux' }}
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
      - name: Install SYFT v1.24.0 on macOS
        if: ${{ runner.os == 'macOS' }}
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin v1.24.0
      
      #Running section.
      - name: Run SYFT on Windows
        if: ${{ runner.os == 'Windows' }}
        run: D:/syft/syft dir:C:/ -vv -o spdx-json=sbom.json
      - name: Run SYFT on Ubuntu
        if: ${{ runner.os == 'Linux' }}
        run: syft dir:/ -vv -o spdx-json=sbom.json
      - name: Run SYFT on macOS
        if: ${{ runner.os == 'macOS' }}
        run: sudo syft dir:/ -vv -o spdx-json=sbom.json --exclude ./Users --exclude ./System/Volumes --exclude ./private
        shell: bash
      #Preparing artifact (raw SBOM.json is too big)
      - name: Compress SBOM file
        run: Compress-Archive sbom.json sbom.json.zip
      #Upload artifact action
      - uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.event.client_payload.agentSpec }}-${{ github.event.client_payload.imageVersion }}
          path: sbom.json.zip
          if-no-files-found: warn
      #Upload release asset action
      #Might be changed to softprops/action-gh-release after additional check
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_ID: ${{ github.event.client_payload.ReleaseID }}
          AGENT_SPEC: ${{ github.event.client_payload.agentSpec }}
        with:
          upload_url: "https://uploads.github.com/repos/actions/runner-images/releases/${{ env.RELEASE_ID }}/assets{?name,label}"
          asset_path: ./sbom.json.zip
          asset_name: sbom.${{ env.AGENT_SPEC }}.json.zip
          asset_content_type: application/zip
